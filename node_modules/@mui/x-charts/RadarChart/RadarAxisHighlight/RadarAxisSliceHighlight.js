"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadarAxisSliceHighlight = RadarAxisSliceHighlight;
var React = _interopRequireWildcard(require("react"));
var _useRadarAxisHighlight = require("./useRadarAxisHighlight");
var _jsxRuntime = require("react/jsx-runtime");
const params = {
  includesNeighbors: true
};
/**
 * @ignore - internal component.
 */
function RadarAxisSliceHighlight(props) {
  const {
    classes
  } = props;
  const data = (0, _useRadarAxisHighlight.useRadarAxisHighlight)(params);
  if (data === null) {
    return null;
  }
  const {
    center,
    series,
    points
  } = data;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("g", {
    className: classes?.root,
    children: series.map(({
      id,
      color
    }, seriesIndex) => {
      const {
        highlighted,
        next = highlighted,
        previous = highlighted
      } = points[seriesIndex];
      const ratioPrev = previous.r / (previous.r + highlighted.r);
      const ratioNext = next.r / (next.r + highlighted.r);
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
        className: classes?.slice,
        fill: color,
        d: `M
 ${center.cx} ${center.cy}
 L ${previous.x * (1 - ratioPrev) + highlighted.x * ratioPrev} ${previous.y * (1 - ratioPrev) + highlighted.y * ratioPrev}
 L ${highlighted.x} ${highlighted.y}
 L ${next.x * (1 - ratioNext) + highlighted.x * ratioNext} ${next.y * (1 - ratioNext) + highlighted.y * ratioNext}
 Z
 `,
        pointerEvents: "none"
      }, id);
    })
  });
}