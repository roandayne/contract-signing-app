import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
const _excluded = ["seriesId"];
import * as React from 'react';
import PropTypes from 'prop-types';
import { useRadarSeriesData } from "./useRadarSeriesData.js";
import { getAreaPath } from "./getAreaPath.js";
import { jsx as _jsx } from "react/jsx-runtime";
function RadarSeriesArea(props) {
  const {
      seriesId
    } = props,
    other = _objectWithoutPropertiesLoose(props, _excluded);
  const seriesCoordinates = useRadarSeriesData(seriesId);
  return /*#__PURE__*/_jsx(React.Fragment, {
    children: seriesCoordinates?.map(({
      seriesId: id,
      points,
      color
    }) => /*#__PURE__*/_jsx("path", _extends({
      d: getAreaPath(points),
      fill: color,
      stroke: color,
      fillOpacity: 0.4
    }, other), id))
  });
}
process.env.NODE_ENV !== "production" ? RadarSeriesArea.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The id of the series to display.
   * If undefined all series are displayed.
   */
  seriesId: PropTypes.string
} : void 0;
export { RadarSeriesArea };