import * as React from 'react';
import PropTypes from 'prop-types';
import composeClasses from '@mui/utils/composeClasses';
import { RadarAxisSliceHighlight } from "./RadarAxisSliceHighlight.js";
import { RadarAxisPointsHighlight } from "./RadarAxisPointsHighlight.js";
import { getRadarAxisHighlightUtilityClass } from "./radarAxisHighlightClasses.js";
import { jsx as _jsx } from "react/jsx-runtime";
const useUtilityClasses = classes => {
  const slots = {
    root: ['root'],
    line: ['line'],
    slice: ['slice'],
    dot: ['dot']
  };
  return composeClasses(slots, getRadarAxisHighlightUtilityClass, classes);
};
function RadarAxisHighlight(props) {
  const classes = useUtilityClasses(props.classes);
  return props.axisHighlightShape === 'slice' ? /*#__PURE__*/_jsx(RadarAxisSliceHighlight, {
    classes: classes
  }) : /*#__PURE__*/_jsx(RadarAxisPointsHighlight, {
    classes: classes
  });
}
process.env.NODE_ENV !== "production" ? RadarAxisHighlight.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Switch between different axis highlight visualization.
   * - points: display points on each highlighted value. Recommended for radar with multiple series.
   * - slice: display a slice around the highlighted value. Recommended for radar with a single series.
   * The default value is computed depending on the number of series provided.
   */
  axisHighlightShape: PropTypes.oneOf(['points', 'slice']).isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object
} : void 0;
export { RadarAxisHighlight };