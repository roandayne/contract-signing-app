import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
const _excluded = ["seriesId"];
import * as React from 'react';
import PropTypes from 'prop-types';
import { useRadarSeriesData } from "./useRadarSeriesData.js";
import { jsx as _jsx } from "react/jsx-runtime";
function RadarSeriesMarks(props) {
  const other = _objectWithoutPropertiesLoose(props, _excluded);
  const seriesCoordinates = useRadarSeriesData(props.seriesId);
  return /*#__PURE__*/_jsx(React.Fragment, {
    children: seriesCoordinates?.map(({
      seriesId: id,
      points,
      color
    }) => /*#__PURE__*/_jsx("g", {
      children: points.map((point, index) => /*#__PURE__*/_jsx("circle", _extends({
        cx: point.x,
        cy: point.y,
        r: 5,
        fill: color,
        stroke: color
      }, other), index))
    }, id))
  });
}
process.env.NODE_ENV !== "production" ? RadarSeriesMarks.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The id of the series to display.
   * If undefined all series are displayed.
   */
  seriesId: PropTypes.string
} : void 0;
export { RadarSeriesMarks };