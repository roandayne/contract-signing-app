import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import PropTypes from 'prop-types';
import { useRadarSeriesData } from "./useRadarSeriesData.js";
import { getAreaPath } from "./getAreaPath.js";
import { useInteractionAllItemProps } from "../../hooks/useInteractionItemProps.js";
import { useItemHighlightedGetter } from "../../hooks/useItemHighlightedGetter.js";
import { useUtilityClasses } from "./radarSeriesPlotClasses.js";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
function RadarSeriesPlot(props) {
  const seriesCoordinates = useRadarSeriesData(props.seriesId);
  const interactionProps = useInteractionAllItemProps(seriesCoordinates);
  const {
    isFaded,
    isHighlighted
  } = useItemHighlightedGetter();
  const classes = useUtilityClasses(props.classes);
  return /*#__PURE__*/_jsx("g", {
    className: classes.root,
    children: seriesCoordinates?.map(({
      seriesId,
      points,
      color,
      showMark
    }, seriesIndex) => {
      const isItemHighlighted = isHighlighted({
        seriesId
      });
      const isItemFaded = !isItemHighlighted && isFaded({
        seriesId
      });
      return /*#__PURE__*/_jsxs("g", {
        children: [/*#__PURE__*/_jsx("path", _extends({
          d: getAreaPath(points)
        }, interactionProps[seriesIndex], {
          className: isItemHighlighted && classes.highlighted || isItemFaded && classes.faded || undefined,
          fill: color,
          stroke: color,
          filter: isItemHighlighted ? 'brightness(120%)' : undefined,
          strokeOpacity: isItemFaded ? 0.5 : 1,
          fillOpacity: isItemFaded ? 0.1 : 0.4
        }), seriesId), showMark && points.map((point, index) => /*#__PURE__*/_jsx("circle", {
          cx: point.x,
          cy: point.y,
          r: 5,
          fill: color,
          stroke: color
        }, index))]
      }, seriesId);
    })
  });
}
process.env.NODE_ENV !== "production" ? RadarSeriesPlot.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object,
  /**
   * The id of the series to display.
   * If undefined all series are displayed.
   */
  seriesId: PropTypes.string
} : void 0;
export { RadarSeriesPlot };