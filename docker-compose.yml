version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: contract_signing_app
    ports:
      - "5434:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/contract_signing_app
      RAILS_ENV: development
      SMTP_ADDRESS: mailcatcher
      SMTP_PORT: 1025
    volumes:
      - ./server:/app
      - bundle_cache:/usr/local/bundle
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health -H 'Accept: text/plain' --retry 2 --retry-delay 1 --max-time 5 || exit 1"]
      interval: 60m
      timeout: 5s
      retries: 3
      start_period: 30s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3000
    networks:
      - app_network

  mailcatcher:
    image: tophfr/mailcatcher
    ports:
      - "1080:80"
      - "1025:25"
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  bundle_cache: 